# frozen_string_literal: true

class TypeStruct
  # Respects:
  #   http://json2struct.mervine.net/
  #   https://mholt.github.io/json-to-go/
  class Generator
    def initialize
      @io = StringIO.new
    end

    # call-seq:
    #   parse(name, hash) -> String
    #
    # Auto Generate TypeStruct definition from Hash object.
    #
    # require 'type_struct/generator'
    #
    # puts TypeStruct::Generator.new.parse("AutoGeneratedStruct", {hello: 'world!'})
    # # => "AutoGeneratedStruct = TypeStruct.new(\nhello: String,\n)\n"
    #
    # See also type_struct/generator/{json,yaml}.rb
    def parse(name, h)
      io = StringIO.new
      io.puts "#{name} = TypeStruct.new("
      h.each do |key, value|
        io.puts "  #{key}: #{parse_one(io, key, value)},"
      end
      io.puts ")"
      @io.print io.string
      @io.string
    end

    def parse_one(io, key, value)
      case value
      when Array
        if value.empty?
          "Array"
        else
          "ArrayOf(#{parse_one(io, key, value.first)})"
        end
      when Hash
        if value.empty?
          "Hash"
        else
          type_struct = key.to_s.gsub(/s\z/, '').split('_').map(&:capitalize).join
          parse(type_struct, value)
          type_struct
        end
      when Integer
        "Integer"
      when NilClass
        "Object"
      when TrueClass, FalseClass
        "TrueClass | FalseClass"
      else
        value.class.to_s
      end
    end
  end
end
